<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="KontragentBS.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>21, 18</value>
  </metadata>
  <metadata name="GridImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>151, 18</value>
  </metadata>
  <data name="GridImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAD6
        DgAAAk1TRnQBSQFMAgEBBAEAARABDwEQAQ8BEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/ALEAAdUBzwHHAbgBqwGYAbsBrgGc
        AbsBrgGcAbsBrgGcAbsBrgGcAbsBrgGcAbwBrwGeAe8B7QHrTgABzgGUAXMBrQFaASEBnAFKARgBnAFS
        ASEBtQFzAVIB3gG1AZxFAAFvAVQBLQGUAXkBVwGlAY0BcAGKAW4BSgGlAY0BcQGKAW4BSgGlAY0BcQGI
        AWoBRQG8Aa8BniQAAa0BYwE5AaUBOQEIAa0BUgEpAcYBlAF7GwABvQFzAUIBpQE5AQABawFjAVoBIQGE
        AaUBMQGUAbUBOQF7AYwDSgGMAVoBOQHnAa0BpRgAAXsBrQF7ATkBhAE5AQABUgIAAUICAAE5AQABIQFK
        ASEBSgFzAUoBlAGtAZQPAAFtAVIBKwHLAbcBowH0AekB4gGlAY0BcQH2AewB5wGlAY0BcQH2AewB5wGl
        AY0BcQG7Aa4BnB4AAa0BYwE5Aa0BUgEQAdYBnAFCAecBvQFzAfcBxgGUAc4BjAFaAa0BSgEQAbUBWgEp
        Ac4BnAF7DwAB7wHOAq0BMQEAAYQBawFSATkBvQHnAUIB1gH3AVoB1gHvARgBpQHOASEBvQHnARgBewGl
        AVIBQgE5Ac4BlAFzEgABQgGcAUIBCAF7AQgBYwG1AWMBlAHWAZQBpQHnAqUB3gGlAYwBxgGMAWMBlAFj
        ARABQgEQARgBSgEYDAABbQFSASsBlwF8AVoBpQGMAW8BigFuAUoBpQGNAXEBigFuAUoBpQGNAXEBigFu
        AUoBuwGuAZwYAAGtAWMBOQGtAVIBEAHWAZwBOQHnAb0BWgHnAbUBQgHWAZwBQgH/AdYBpQH/Ad4BrQH/
        Ad4BrQHvAb0BhAHOAXsBOQG1AVINAAHeAZwBUgG1ATkBAAJ7AXMBWgHnAf8BYwHWAecBEAF7Aa0BMQGc
        Ab0BOQGtAc4BEAGUAcYBKQG9AecBYwFSAUIB1gGcAXsQAAGMAQABYwHeAYQBYwHvAYwBWgHnAYwBWgHe
        AYQBUgHWAXsBWgHeAYQBawHWAYwBlAHeAZwBUgGUAVoBMQFaATEJAAFtAVIBKwGxAZkBfwHMAbsBqQGY
        AX0BXQHOAb0BrAGYAX0BXQHOAb0BrAGYAX0BXQG7Aa4BnBgAAbUBWgEQAecBtQFSAecBrQE5Ad4BpQEp
        AecBtQE5AdYBnAFCAf8BxgGMAfcBtQFzAf8BzgGUAf8B1gGlAf8B3gGtAb0BUg0AAd4BlAExAbUBSgEI
        AYwBYwFCAXsB7wH3ASEBnAHGATEBlAG9ATEBnAHGAQABcwGlAVIBxgHeATEBpQHOAQgBhAG1AXsBUgEp
        Ae8BxgG9DAABCAGUAQgBWgH3AZQBUgHvAYwBSgHnAYQBQgHeAXsBOQHWAXMBIQG1AUoBEAGMASEBMQHO
        AWMBOQHGAWsBCAE5AQgJAAFtAVIBKwGxAZkBfwHMAbsBqQGYAX0BXQHOAb0BrAGYAX0BXQHOAb0BrAGY
        AX0BXQGzAZoBgQH1AesB5AH1Ae0B5wH1Ae0B5wH1Ae0B5wH3AfIB7wkAAb0BYwEYAecBtQFKAd4BnAEh
        AdYBhAEYAdYBcwEIAdYBnAE5AecBlAFCAecBjAEYAd4BjAEYAd4BjAE5AfcBzgGUAcYBWg0AAd4BlAEp
        Ac4BewEhAa0BOQEAAYwClAFjAd4B/wFjAd4B7wEYAYQBtQFSAcYB3gEpAZQBvQEIAXsBrQEYAbUB7wFj
        AWsBWgG9AWsBQgwAATEBnAEhAVIB7wF7AWMB/wGcAVoB9wGUAVIB7wGMATkBzgFrAQABawEAARABjAEp
        ATEBzgFrASkBtQFSASkBUgEpCQABbQFSASsBrwGXAXsBzQG7AakBmAF9AV0BzgG9AawBmAF9AV0BzgG9
        AawBlQF6AVkBpwF3AUcB+gGoAWsB+wG0AYAB+QHFAaAB+QHFAaAB+gG1AYIGAAGtAWMBOQG9AWsBGAHW
        AYwBIQHnAa0BOQH3Ad4BYwHvAb0BQgHWAYQBGAHeAYwBIQH/AcYBQgH/Ab0BKQH3AbUBMQHnAZQBIQHO
        AWsBAAHWAYQBMQkAAd4BpQFKAd4BpQFCAcYBawEYAZwBMQEIAZwBrQGEAYwB/wH3AWsB5wH/ATkBtQHW
        ARABhAGtAVIBxgHnAVIB1gH/AWMBewFzAa0BUgEQDAABnAHWAZQBGAG1ASEBYwH/AZQBYwH/AZwBMQG1
        AYwBAAJrAQABYwFSARgBnAFKATkB1gFzARABawEYAXsBnAF7CQABbQFSASsBfQFeATYBfQFeATYBfQFe
        ATYBfQFeATYBfQFeATYBfQFeATYBfQFeATYBpwF3AUcB+gGoAWsB+wG0AYAB+QHFAaAB+QHFAaAB+wG0
        AYADAAGcATEBAAHGAWsBCAHnAa0BOQH3Ad4BYwH/Ac4BSgH/AcYBQgH/AdYBUgHWAYwBGAL3AYwB9wHn
        AXMB/wHGAUIB/wG9ASkB/wG9ASkB/wG9ATEB7wGlASEB1gFrCgAB3gGlAUIB7wG1AUoBxgFzASEBpQEx
        AQABjAFaATkBnAHGAbUBhALnAWsB1gHnAXMB5wHvAWMBrQHGAYwBQgEhAb0BWgEQDwABQgGtATEBCAGl
        ASEBCAFzAZQBCAFzAa0BGAGEAdYBGAF7AcYBAAFrAZwBCAFrATkBMQFzATEMAAFtAVIBKwHIAbQBnwH0
        AekB4gH2AewB5wH2AewB5wH2AewB5wH2AewB5wGiAYoBbQGXAW4BQQHMAYwBVwHRAZcBZwHRAZcBZwHR
        AZcBZwHRAZcBZwMAAa0BUgEpAdYBnAE5AfcB1gFaAf8BxgFCAf8B1gFSAfcB5wFrAe8B3gFzAdYBlAEp
        AecBxgFaAvcBjAH3Af8BlAL3AYQB9wHWAVoB/wG9ATEB9wGtASkB1gF7ASEGAAH3Ad4B1gHGAWsBMQH3
        AdYBcwH3AdYBYwHWAZwBMQG1AVIBEAGcASkBAAGcATkBEAGUAWMBQgGUAVoBOQGcATEBAAGtAUIBAAHe
        AaUBcxIAARgBhAGMARABhAHGASkBpQH/ASkBnAH/ATEBnAH/ASkBjAHvAQABawGcDwABbQFSASsBywG3
        AaMB9AHpAeIB9gHsAecB9gHsAecB9gHsAecB9gHsAecBpQGNAXEBeAFaATIBcgFWAS8BfQFeATYBfQFe
        ATYBfQFeATYBfQFeATYGAAGlAUoBEAH3AecBewH3AecBawHvAd4BawHeAZQBKQHWAXMBEAHWAXsBEAHW
        AXsBGAH/Aa0BIQHvAb0BQgHvAecBcwH3Af8BlAH3Af8BlAHWAXsBEAkAAcYBtQGcAc4BcwExAf8B5wGc
        AfcB1gF7Av8BhAHvAdYBcwHOAZQBSgHGAXMBIQG9AVoBEAG9AVoBCAG9AWMBCAHWAZwBWhUAAQgBawGc
        ARABtQH/ASkBvQH/ATEBtQH/ATEBrQH/ATEBnAH/ARgBewG1Aa0BzgHeDAABbQFSASsByAG0AZ8B9AHp
        AeIB9gHsAecB9gHsAecB9gHsAecB9gHsAecBogGKAW0BpwF3AUcB+gGoAWsB+wG0AYAB+wG0AYAB+wG0
        AYAB+wG0AYAGAAHOAZwBewHOAYwBOQHeAbUBUgHnAcYBWgHnAa0BSgHeAZwBOQHeAYwBKQHeAYwBKQH/
        Ac4BSgH/Ac4BSgH/Ac4BSgH3AcYBQgHnAa0BOQHWAYQBMQkAATkBhAEpAaUBewExAf8BtQGEAf8B3gGl
        Af8B7wGlAf8B9wGUAfcB5wFjAe8BvQFCAd4BlAEhAd4BlAExAe8BvQGEGAABCAF7Aa0BSgHeAf8BUgHe
        Af8BSgHWAf8BQgHGAf8BOQG1Af8BGAF7AbUBrQHOAd4MAAFtAVIBKwF9AV4BNgF9AV4BNgF9AV4BNgF9
        AV4BNgF9AV4BNgF9AV4BNgF9AV4BNgGtAYkBZAH0Ac8BswHzAdQBvAHzAdQBvAHzAdQBvAHyAdsBygkA
        AdYBpQGMAcYBewFKAcYBewEhAdYBpQFCAecBzgFrAe8B3gFzAecBrQFKAfcB5wFzAecBtQFKAdYBhAEY
        Ac4BawEIAdYBlAFKDAABCAGUARgBYwHWAXsBjAGcAVIB1gGcAWMB3gGEAVoB3gGlAYQB/wHvAc4B9wHn
        Ab0B9wHeAbUB9wHnAcYbAAEYAXsBrQFzAfcB/wFrAe8B/wFaAecB/wFSAd4B/wFKAc4B9wEIAXMBpQ8A
        AW8BVAEtAWsBUQEoAZABfAFdAZIBfwFiAZIBfwFiAZIBfwFiAYUBcAFPAXIBVgEtAbwBrwGeJAAB3gGc
        AWsB1gGEASkB1gF7ARABzgFzARAB3gGUAVIVAAE5AbUBQgExAd4BWgFjAfcBlAE5AZwBMQFjAYQBOQHn
        At4nAAF7Aa0BxgFrAdYB5wGEAfcB/wFzAfcB/wFjAecB9wExAZwBvQGMAb0Bzg8AAdUBzwHHAbgBqwGY
        AfEB4gHYAfYB7AHnAfYB7AHnAfYB7AHnAdsBzgHEAbwBrwGeAe8B7QHrSwABQgG1AUoBGAGtARgBOQG9
        AUowAAGMAb0BxgEhAYwBtQExAZwBvQEpAYwBtRsAAfEB4gHYAfYB7AHnAfYB7AHnAfYB7AHnAfEB7AHq
        sQAB8QHuAewB8QHtAewB8gHxAfAB8gHwAe4B9AHzAfIYAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEB
        AQABAQYAAQEWAAP/gQAG/wGAAT8C/wHwAT8C/wGAAT8B/AE/AeABDwHwAQ8BgAE/AfABBwHAAQcB4AEH
        AYABPwHAAQMBwAEDAeABAwGAAT8BwAEDAcABAQHgAQMBgAEBAcABAwHAAQEB4AEDAYABAQGAAQEBwAEB
        AeABAwGAAQECAAHgAQEB8AEHAYABAQIAAcABAQH4AQ8BgAEBAYABAQHAAQMB+AEHAYABAQGAAQEBwAEH
        AfgBBwGAAQEBwAEDAcABDwH4AQ8BgAE/AfwBHwHAAf8B+AEPAYABPwL/AeMB/wH8AT8B4Af/AeAB/ws=
</value>
  </data>
</root>